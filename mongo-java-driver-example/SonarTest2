pipeline {
	agent any
	environment {
		project_path = "mongo-java-driver-example"
	}
	stages {
        	stage('compile,test and package') {
        		steps {
				dir(project_path) {
            				sh 'mvn clean package'
				}
            		}
        	}
		stage('SonarQube analysis') { 
			steps {
        			withSonarQubeEnv('sonar-mongo') { 
					dir(project_path) {
						sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar ' + 
					          '-f pom.xml ' +
					          '-Dsonar.projectKey=com.huettermann:all:master ' + 
					          '-Dsonar.language=java ' +
					          '-Dsonar.sources=. ' +
					          '-Dsonar.tests=. ' +
				        	  '-Dsonar.test.inclusions=**/*Test*/** ' +
				          	'-Dsonar.exclusions=**/*Test*/**'
					}
				}
			}
		}
		stage("Quality Gate") {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
        	stage('archival') {
        		steps {
				dir(project_path) {
            	 			archiveArtifacts 'target/*.jar'
            			}
			}
        	}
	}
}
